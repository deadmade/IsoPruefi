<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="network_8h" kind="file" language="C++">
    <compoundname>network.h</compoundname>
    <includes refid="platform_8h" local="yes">platform.h</includes>
    <includedby refid="core_8cpp" local="yes">src/core.cpp</includedby>
    <includedby refid="network_8cpp" local="yes">src/network.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/network.h</label>
        <link refid="network_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Adafruit_ADT7410.h</label>
      </node>
      <node id="3">
        <label>Arduino.h</label>
      </node>
      <node id="8">
        <label>ArduinoJson.h</label>
      </node>
      <node id="9">
        <label>ArduinoMqttClient.h</label>
      </node>
      <node id="6">
        <label>RTClib.h</label>
      </node>
      <node id="5">
        <label>SdFat.h</label>
      </node>
      <node id="4">
        <label>Wire.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/network.h</label>
        <link refid="network_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/core.cpp</label>
        <link refid="core_8cpp"/>
      </node>
      <node id="3">
        <label>src/network.cpp</label>
        <link refid="network_8cpp"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="network_8h_1a31250862008995d38cb54679c97efe5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ConnectToWiFi</definition>
        <argsstring>(unsigned long timeoutMs=10000)</argsstring>
        <name>ConnectToWiFi</name>
        <param>
          <type>unsigned long</type>
          <declname>timeoutMs</declname>
          <defval>10000</defval>
        </param>
        <briefdescription>
<para>Establishes a WiFi connection with the configured network. </para>
        </briefdescription>
        <detaileddescription>
<para>Attempts to connect to the WiFi network using credentials from the secrets file. Provides visual feedback via serial output and enforces a connection timeout.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeoutMs</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum time in milliseconds to wait for connection (default: 10000ms). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if WiFi connection is successful, false if timeout occurs. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/network.h" line="5" column="6" bodyfile="src/network.cpp" bodystart="25" bodyend="41" declfile="include/network.h" declline="5" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="network_8h_1aa34baa66e468a919c43c307f1482c2fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ConnectToMQTT</definition>
        <argsstring>(MqttClient &amp;mqttClient, unsigned long timeoutMs=10000)</argsstring>
        <name>ConnectToMQTT</name>
        <param>
          <type>MqttClient &amp;</type>
          <declname>mqttClient</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>timeoutMs</declname>
          <defval>10000</defval>
        </param>
        <briefdescription>
<para>Establishes an authenticated MQTT connection to the broker. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets up MQTT client credentials using values from the secrets file and attempts to connect to the configured MQTT broker. Provides visual feedback and enforces a connection timeout.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mqttClient</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the MQTT client instance to connect. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeoutMs</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum time in milliseconds to wait for connection (default: 10000ms). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if MQTT connection is successful, false if timeout occurs. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/network.h" line="6" column="6" bodyfile="src/network.cpp" bodystart="54" bodyend="72" declfile="include/network.h" declline="6" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="network_8h_1a157674060adec29df063c6ac05407cde" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsConnectedToServer</definition>
        <argsstring>(MqttClient &amp;mqttClient)</argsstring>
        <name>IsConnectedToServer</name>
        <param>
          <type>MqttClient &amp;</type>
          <declname>mqttClient</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/network.h" line="8" column="13" bodyfile="include/network.h" bodystart="8" bodyend="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound">platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="network_8h_1a31250862008995d38cb54679c97efe5e" kindref="member">ConnectToWiFi</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timeoutMs<sp/>=<sp/>10000);</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="network_8h_1aa34baa66e468a919c43c307f1482c2fc" kindref="member">ConnectToMQTT</ref>(MqttClient&amp;<sp/><ref refid="mqtt_8h_1aaf73b36dfdb5cafe8dbb8ca7563f7e56" kindref="member">mqttClient</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timeoutMs<sp/>=<sp/>10000);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="network_8h_1a157674060adec29df063c6ac05407cde" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="network_8h_1a157674060adec29df063c6ac05407cde" kindref="member">IsConnectedToServer</ref>(MqttClient&amp;<sp/><ref refid="mqtt_8h_1aaf73b36dfdb5cafe8dbb8ca7563f7e56" kindref="member">mqttClient</ref>)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WiFi.status()<sp/>==<sp/>WL_CONNECTED<sp/>&amp;&amp;<sp/><ref refid="mqtt_8h_1aaf73b36dfdb5cafe8dbb8ca7563f7e56" kindref="member">mqttClient</ref>.connected();</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="include/network.h"/>
  </compounddef>
</doxygen>
