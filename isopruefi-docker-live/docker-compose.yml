networks:
  isopruefi-network:
    driver: bridge
  isopruefi-monitoring:

services:
  traefik:
    image: traefik:3.4.4
    container_name: isopruefi-loadbalancer
    restart: unless-stopped
    ports:
      - 5000:80
      - 5001:443
      - 5002:8080
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.rule=Host(`traefik.aicon.dhbw-heidenheim.de`)"
      - "traefik.http.services.dashboard.loadbalancer.server.port=5002"

      - "traefik.http.routers.dashboard.tls.domains[0].main=*.aicon.dhbw-heidenheim.de"
      - "traefik.http.routers.dashboard.tls.domains[0].sans=*.aicon.dhbw-heidenheim.de"

      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme = https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto = https"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/traefik.yml:/traefik.yml:ro"
      - "./traefik/conf:/conf:ro"
      - "./traefik/certs/:/var/traefik/certs/:rw"
    networks:
      - isopruefi-network

  influxdb3:
    image: influxdb:3.2.1-core
    container_name: isopruefi-influxdb
    restart: unless-stopped
    command:
      - influxdb3
      - serve
      - --node-id=node0
      - --object-store=file
      - --data-dir=/var/lib/influxdb3
    volumes:
      - influxdb3_isopruefi:/var/lib/influxdb3
    networks:
      - isopruefi-network

  postgres:
    image: postgres:17.5
    container_name: isopruefi-postgres
    restart: unless-stopped
    volumes:
      - postgres_isopruefi:/var/lib/postgresql/data
    networks:
      - isopruefi-network
    env_file:
      - ./secrets.env

  loki:
    image: grafana/loki:3.5.2
    container_name: isopruefi-loki
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/local-config.yaml
    networks:
      - isopruefi-monitoring

  prometheus:
    image: prom/prometheus:v3.4.2
    container_name: isopruefi-prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./loki/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./loki/alerts.yml:/etc/prometheus/alerts.yml:ro
    networks:
      - isopruefi-monitoring

  alloy:
    image: grafana/alloy:v1.9.2
    container_name: isopruefi-alloy
    volumes:
      - ./loki/config.alloy:/etc/alloy/config.alloy
      - /var/run/docker.sock:/var/run/docker.sock
    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    networks:
      - isopruefi-monitoring
    depends_on:
      - loki
      - prometheus

  grafana:
    image: grafana/grafana:12.0.2
    container_name: isopruefi-grafana
    ports:
      - 5004:3000
    volumes:
      - "./grafana/grafana.ini:/etc/grafana/grafana.ini:ro"
    env_file:
      - ./secrets.env
    networks:
      - isopruefi-monitoring
    depends_on:
      - loki
      - alloy
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: false
          version: 1
          editable: false
        - name: Prometheus
          type: prometheus
          orgId: 1
          url: http://prometheus:9090
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh

  isopruefi-frontend-1:
    image: ghcr.io/deadmade/isopruefi-frontend:latest
    container_name: isopruefi-frontend-1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/frontend`)"
      - "traefik.http.middlewares.frontend-stripprefix.stripprefix.prefixes=/frontend"
      - "traefik.http.routers.frontend.middlewares=frontend-stripprefix"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.services.frontend.loadbalancer.server.port=5173"
    volumes:
      - ./isopruefi-frontend:/app
      - /app/node_modules
    networks:
      - isopruefi-network
    environment:
      - NODE_ENV=development
    stdin_open: true
    tty: true

  isopruefi-frontend-2:
    image: ghcr.io/deadmade/isopruefi-frontend:latest
    container_name: isopruefi-frontend-2
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/frontend`)"
      - "traefik.http.middlewares.frontend-stripprefix.stripprefix.prefixes=/frontend"
      - "traefik.http.routers.frontend.middlewares=frontend-stripprefix"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.services.frontend.loadbalancer.server.port=5173"
    volumes:
      - ./isopruefi-frontend:/app
      - /app/node_modules
    networks:
      - isopruefi-network
    environment:
      - NODE_ENV=development
    stdin_open: true
    tty: true

  isopruefi-backend-api-1:
    image: ghcr.io/deadmade/isopruefi-rest-api:latest
    container_name: isopruefi-backend-api-1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/backend`)"
      - "traefik.http.middlewares.backend-stripprefix.stripprefix.prefixes=/backend"
      - "traefik.http.routers.backend.middlewares=backend-stripprefix"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
    networks:
      - isopruefi-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    env_file:
      - ./secrets.env
    depends_on:
      - influxdb3
      - postgres
      - loki

  isopruefi-backend-api-2:
    image: ghcr.io/deadmade/isopruefi-rest-api:latest
    container_name: isopruefi-backend-api-2
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/backend`)"
      - "traefik.http.middlewares.backend-stripprefix.stripprefix.prefixes=/backend"
      - "traefik.http.routers.backend.middlewares=backend-stripprefix"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
    networks:
      - isopruefi-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    env_file:
      - ./secrets.env
    depends_on:
      - influxdb3
      - postgres
      - loki

  isopruefi-mqtt-receiver-1:
    image: ghcr.io/deadmade/isopruefi-mqtt-worker:latest
    container_name: isopruefi-mqtt-receiver-1
    networks:
      - isopruefi-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    env_file:
      - ./secrets.env
    depends_on:
      - influxdb3
      - postgres
      - loki

  isopruefi-mqtt-receiver-2:
    image: ghcr.io/deadmade/isopruefi-mqtt-worker:latest
    container_name: isopruefi-mqtt-receiver-2
    networks:
      - isopruefi-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    env_file:
      - ./secrets.env
    depends_on:
      - influxdb3
      - postgres
      - loki

  isopruefi-get-weather-worker-1:
    image: ghcr.io/deadmade/isopruefi-weather-worker:latest
    container_name: isopruefi-get-weather-worker-1
    networks:
      - isopruefi-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    env_file:
      - ./secrets.env
    depends_on:
      - influxdb3
      - postgres
      - loki

  isopruefi-get-weather-worker-2:
    image: ghcr.io/deadmade/isopruefi-weather-worker:latest
    container_name: isopruefi-get-weather-worker-2
    networks:
      - isopruefi-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    env_file:
      - ./secrets.env
    depends_on:
      - influxdb3
      - postgres
      - loki

volumes:
  influxdb3_isopruefi:
  postgres_isopruefi: