<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="d5/dc4/core_8h" kind="file" language="C++">
    <compoundname>core.h</compoundname>
    <includedby refid="da/de0/core_8cpp" local="yes">src/core.cpp</includedby>
    <includedby refid="df/d0a/main_8cpp" local="yes">src/main.cpp</includedby>
    <invincdepgraph>
      <node id="1">
        <label>include/core.h</label>
        <link refid="d5/dc4/core_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/core.cpp</label>
        <link refid="da/de0/core_8cpp"/>
      </node>
      <node id="3">
        <label>src/main.cpp</label>
        <link refid="df/d0a/main_8cpp"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="d5/dc4/core_8h_1a9fb1675443ce002d3928dd3edf3b2a72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void coreSetup</definition>
        <argsstring>()</argsstring>
        <name>coreSetup</name>
        <briefdescription>
<para>Initializes core system components. </para>
        </briefdescription>
        <detaileddescription>
<para>This function performs the following setup steps:<itemizedlist>
<listitem><para>Connects to WiFi and sets the global wifiOk flag.</para>
</listitem><listitem><para>Generates and sets the MQTT client ID based on the sensor in use.</para>
</listitem><listitem><para>Connects to the MQTT broker if WiFi connection is successful.</para>
</listitem><listitem><para>Initializes the real-time clock (RTC) and sets the time if power was lost.</para>
</listitem><listitem><para>Registers the date/time callback for SD file timestamps.</para>
</listitem><listitem><para>Initializes the SD card and halts execution if initialization fails.</para>
</listitem><listitem><para>Initializes the temperature sensor and halts execution if initialization fails.</para>
</listitem><listitem><para>Prints a message to the serial console upon successful setup.</para>
</listitem></itemizedlist>
</para>
<para>This function will halt execution (infinite loop) if any critical component fails to initialize. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.h" line="3" column="6" bodyfile="src/core.cpp" bodystart="65" bodyend="99" declfile="include/core.h" declline="3" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/dc4/core_8h_1aa5603fdb8113111f87914938533d1ece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void coreLoop</definition>
        <argsstring>()</argsstring>
        <name>coreLoop</name>
        <briefdescription>
<para>Main loop function for core operations. </para>
        </briefdescription>
        <detaileddescription>
<para>This function manages the main operational loop, including:<itemizedlist>
<listitem><para>Reading the current time from the RTC.</para>
</listitem><listitem><para>Ensuring WiFi and MQTT connections are active, attempting reconnection if necessary.</para>
</listitem><listitem><para>Logging temperature data to SD card if network connections are unavailable.</para>
</listitem><listitem><para>Sending recovered (pending) data after reconnection.</para>
</listitem><listitem><para>Reading and sending temperature data to MQTT broker once per minute.</para>
</listitem><listitem><para>Polling the MQTT client and maintaining a fixed loop delay.</para>
</listitem></itemizedlist>
</para>
<para>The function ensures that temperature data is not lost during connectivity issues by saving to SD card and resending when connections are restored. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.h" line="4" column="6" bodyfile="src/core.cpp" bodystart="115" bodyend="179" declfile="include/core.h" declline="4" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc4/core_8h_1a9fb1675443ce002d3928dd3edf3b2a72" kindref="member">coreSetup</ref>();</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc4/core_8h_1aa5603fdb8113111f87914938533d1ece" kindref="member">coreLoop</ref>();</highlight></codeline>
    </programlisting>
    <location file="include/core.h"/>
  </compounddef>
</doxygen>
