<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d8/d6b/storage_8h" kind="file" language="C++">
    <compoundname>storage.h</compoundname>
    <includes refid="de/d03/platform_8h" local="yes">platform.h</includes>
    <includes local="no">cstdio</includes>
    <includedby refid="da/de0/core_8cpp" local="yes">src/core.cpp</includedby>
    <includedby refid="d8/d5b/mqtt_8cpp" local="yes">src/mqtt.cpp</includedby>
    <includedby refid="da/dc2/storage_8cpp" local="yes">src/storage.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>platform.h</label>
        <link refid="de/d03/platform_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/storage.h</label>
        <link refid="d8/d6b/storage_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Adafruit_ADT7410.h</label>
      </node>
      <node id="3">
        <label>Arduino.h</label>
      </node>
      <node id="8">
        <label>ArduinoJson.h</label>
      </node>
      <node id="9">
        <label>ArduinoMqttClient.h</label>
      </node>
      <node id="6">
        <label>RTClib.h</label>
      </node>
      <node id="5">
        <label>SdFat.h</label>
      </node>
      <node id="4">
        <label>Wire.h</label>
      </node>
      <node id="10">
        <label>cstdio</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/storage.h</label>
        <link refid="d8/d6b/storage_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/core.cpp</label>
        <link refid="da/de0/core_8cpp"/>
      </node>
      <node id="3">
        <label>src/mqtt.cpp</label>
        <link refid="d8/d5b/mqtt_8cpp"/>
      </node>
      <node id="4">
        <label>src/storage.cpp</label>
        <link refid="da/dc2/storage_8cpp"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="d8/d6b/storage_8h_1a09093bc97a03919f0854c4b6683837b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void saveToSD</definition>
        <argsstring>(SdFat &amp;sd, float celsius, const DateTime &amp;now, int sequence)</argsstring>
        <name>saveToSD</name>
        <param>
          <type>SdFat &amp;</type>
          <declname>sd</declname>
        </param>
        <param>
          <type>float</type>
          <declname>celsius</declname>
        </param>
        <param>
          <type>const DateTime &amp;</type>
          <declname>now</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sequence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/storage.h" line="7" column="6" bodyfile="src/storage.cpp" bodystart="54" bodyend="84" declfile="include/storage.h" declline="7" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6b/storage_8h_1a677bacd38e6f20c32dbcc32e29714db8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void saveRecoveredJsonToSd</definition>
        <argsstring>(SdFat &amp;sd, String *fileList, int count, const DateTime &amp;now)</argsstring>
        <name>saveRecoveredJsonToSd</name>
        <param>
          <type>SdFat &amp;</type>
          <declname>sd</declname>
        </param>
        <param>
          <type>String *</type>
          <declname>fileList</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const DateTime &amp;</type>
          <declname>now</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/storage.h" line="8" column="6" bodyfile="src/storage.cpp" bodystart="90" bodyend="112" declfile="include/storage.h" declline="8" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6b/storage_8h_1ad52b53beacc87b5cc365800cd88f492e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int listSavedFiles</definition>
        <argsstring>(SdFat &amp;sd, String *fileList, int maxFiles, const DateTime &amp;now)</argsstring>
        <name>listSavedFiles</name>
        <param>
          <type>SdFat &amp;</type>
          <declname>sd</declname>
        </param>
        <param>
          <type>String *</type>
          <declname>fileList</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxFiles</declname>
        </param>
        <param>
          <type>const DateTime &amp;</type>
          <declname>now</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/storage.h" line="9" column="5" bodyfile="src/storage.cpp" bodystart="118" bodyend="163" declfile="include/storage.h" declline="9" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6b/storage_8h_1ae1177c93c12dbb9a461014a22be241eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void deleteRecoveredAndPendingSourceFiles</definition>
        <argsstring>(SdFat &amp;sd, const String *fileList, int count, const DateTime &amp;now, const String &amp;recoveredFilename)</argsstring>
        <name>deleteRecoveredAndPendingSourceFiles</name>
        <param>
          <type>SdFat &amp;</type>
          <declname>sd</declname>
        </param>
        <param>
          <type>const String *</type>
          <declname>fileList</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const DateTime &amp;</type>
          <declname>now</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>recoveredFilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/storage.h" line="10" column="6" bodyfile="src/storage.cpp" bodystart="169" bodyend="188" declfile="include/storage.h" declline="10" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6b/storage_8h_1ab16364c7bad54765d7deca604d19f172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void buildJson</definition>
        <argsstring>(JsonDocument &amp;doc, float celsius, const DateTime &amp;now, int sequence)</argsstring>
        <name>buildJson</name>
        <param>
          <type><ref refid="db/d72/mock__json_8h_1a54db1bfd55a2f11a001e5854071c899c" kindref="member">JsonDocument</ref> &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>float</type>
          <declname>celsius</declname>
        </param>
        <param>
          <type>const DateTime &amp;</type>
          <declname>now</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sequence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/storage.h" line="12" column="6" bodyfile="src/storage.cpp" bodystart="5" bodyend="12" declfile="include/storage.h" declline="12" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6b/storage_8h_1a49ffb7f647d6701d9cea3decdac97cf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void buildRecoveredJson</definition>
        <argsstring>(JsonDocument &amp;doc, String *fileList, int count, const DateTime &amp;now)</argsstring>
        <name>buildRecoveredJson</name>
        <param>
          <type><ref refid="db/d72/mock__json_8h_1a54db1bfd55a2f11a001e5854071c899c" kindref="member">JsonDocument</ref> &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>String *</type>
          <declname>fileList</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const DateTime &amp;</type>
          <declname>now</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/storage.h" line="13" column="6" bodyfile="src/storage.cpp" bodystart="14" bodyend="48" declfile="include/storage.h" declline="13" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6b/storage_8h_1a03d6491b13757e01963c2ed90e52aa5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void saveDataToSD</definition>
        <argsstring>(float celsius, const DateTime &amp;now, int sequence)</argsstring>
        <name>saveDataToSD</name>
        <param>
          <type>float</type>
          <declname>celsius</declname>
        </param>
        <param>
          <type>const DateTime &amp;</type>
          <declname>now</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sequence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/storage.h" line="41" column="6" bodyfile="src/storage.cpp" bodystart="50" bodyend="52" declfile="include/storage.h" declline="41" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6b/storage_8h_1a9b1aef5a070bc35c2abe6ef4721e421b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void saveRecoveredJsonDataToSd</definition>
        <argsstring>(String *fileList, int count, const DateTime &amp;now)</argsstring>
        <name>saveRecoveredJsonDataToSd</name>
        <param>
          <type>String *</type>
          <declname>fileList</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const DateTime &amp;</type>
          <declname>now</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/storage.h" line="42" column="6" bodyfile="src/storage.cpp" bodystart="86" bodyend="88" declfile="include/storage.h" declline="42" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6b/storage_8h_1a4ebfbb31311cdc384f46f28627733869" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int listSavedFilesData</definition>
        <argsstring>(String *fileList, int maxFiles, const DateTime &amp;now)</argsstring>
        <name>listSavedFilesData</name>
        <param>
          <type>String *</type>
          <declname>fileList</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxFiles</declname>
        </param>
        <param>
          <type>const DateTime &amp;</type>
          <declname>now</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/storage.h" line="43" column="5" bodyfile="src/storage.cpp" bodystart="114" bodyend="116" declfile="include/storage.h" declline="43" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6b/storage_8h_1a655fe9b7f9b52e408b888ce3aadd62a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void deleteRecoveredAndPendingSourceFilesData</definition>
        <argsstring>(const String *fileList, int count, const DateTime &amp;now, const String &amp;recoveredFilename)</argsstring>
        <name>deleteRecoveredAndPendingSourceFilesData</name>
        <param>
          <type>const String *</type>
          <declname>fileList</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const DateTime &amp;</type>
          <declname>now</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>recoveredFilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/storage.h" line="44" column="6" bodyfile="src/storage.cpp" bodystart="165" bodyend="167" declfile="include/storage.h" declline="44" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6b/storage_8h_1a5abff0f0bde3f6a3197f25893c1e0b8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * createFolderName</definition>
        <argsstring>(const DateTime &amp;now)</argsstring>
        <name>createFolderName</name>
        <param>
          <type>const DateTime &amp;</type>
          <declname>now</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/storage.h" line="47" column="19" bodyfile="include/storage.h" bodystart="47" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6b/storage_8h_1a99398dc180671d28434aa4982bfd36ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void createFilename</definition>
        <argsstring>(char *buffer, size_t bufferSize, const DateTime &amp;now)</argsstring>
        <name>createFilename</name>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferSize</declname>
        </param>
        <param>
          <type>const DateTime &amp;</type>
          <declname>now</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/storage.h" line="53" column="13" bodyfile="include/storage.h" bodystart="53" bodyend="57"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="de/d03/platform_8h" kindref="compound">platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>for<sp/>snprintf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNIT_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/storage_8h_1a09093bc97a03919f0854c4b6683837b7" kindref="member">saveToSD</ref>(SdFat&amp;<sp/><ref refid="de/d03/platform_8h_1a15e6b7e1f0fb2d1e0fe1654721bb5302" kindref="member">sd</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>celsius,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DateTime&amp;<sp/>now,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sequence);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/storage_8h_1a677bacd38e6f20c32dbcc32e29714db8" kindref="member">saveRecoveredJsonToSd</ref>(SdFat&amp;<sp/><ref refid="de/d03/platform_8h_1a15e6b7e1f0fb2d1e0fe1654721bb5302" kindref="member">sd</ref>,<sp/>String*<sp/>fileList,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/de0/core_8cpp_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DateTime&amp;<sp/>now);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/storage_8h_1ad52b53beacc87b5cc365800cd88f492e" kindref="member">listSavedFiles</ref>(SdFat&amp;<sp/><ref refid="de/d03/platform_8h_1a15e6b7e1f0fb2d1e0fe1654721bb5302" kindref="member">sd</ref>,<sp/>String*<sp/>fileList,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxFiles,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DateTime&amp;<sp/>now);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/storage_8h_1ae1177c93c12dbb9a461014a22be241eb" kindref="member">deleteRecoveredAndPendingSourceFiles</ref>(SdFat&amp;<sp/><ref refid="de/d03/platform_8h_1a15e6b7e1f0fb2d1e0fe1654721bb5302" kindref="member">sd</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String*<sp/>fileList,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/de0/core_8cpp_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DateTime&amp;<sp/>now,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String&amp;<sp/>recoveredFilename);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/storage_8h_1ab16364c7bad54765d7deca604d19f172" kindref="member">buildJson</ref>(<ref refid="db/d72/mock__json_8h_1a54db1bfd55a2f11a001e5854071c899c" kindref="member">JsonDocument</ref>&amp;<sp/>doc,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>celsius,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DateTime&amp;<sp/>now,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sequence);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/storage_8h_1a49ffb7f647d6701d9cea3decdac97cf1" kindref="member">buildRecoveredJson</ref>(<ref refid="db/d72/mock__json_8h_1a54db1bfd55a2f11a001e5854071c899c" kindref="member">JsonDocument</ref>&amp;<sp/>doc,<sp/>String*<sp/>fileList,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/de0/core_8cpp_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DateTime&amp;<sp/>now);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>native<sp/>test<sp/>versions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/storage_8h_1ab16364c7bad54765d7deca604d19f172" kindref="member">buildJson</ref>(<ref refid="db/d72/mock__json_8h_1a54db1bfd55a2f11a001e5854071c899c" kindref="member">JsonDocument</ref>&amp;<sp/>doc,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>celsius,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DateTime&amp;<sp/>now,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sequence)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>doc[</highlight><highlight class="stringliteral">&quot;sequence&quot;</highlight><highlight class="normal">]<sp/>=<sp/>std::to_string(sequence);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>doc[</highlight><highlight class="stringliteral">&quot;timestamp&quot;</highlight><highlight class="normal">]<sp/>=<sp/>std::to_string(now.unixtime());</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>valArr<sp/>=<sp/>doc.createNestedArray(</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>valArr.add(celsius);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>metaArr<sp/>=<sp/>doc.createNestedArray(</highlight><highlight class="stringliteral">&quot;meta&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>metaArr.add(</highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/storage_8h_1a49ffb7f647d6701d9cea3decdac97cf1" kindref="member">buildRecoveredJson</ref>(<ref refid="db/d72/mock__json_8h_1a54db1bfd55a2f11a001e5854071c899c" kindref="member">JsonDocument</ref>&amp;<sp/>doc,<sp/>String*<sp/>fileList,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/de0/core_8cpp_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DateTime&amp;<sp/>now)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>doc[</highlight><highlight class="stringliteral">&quot;sequence&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;recovered&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>doc[</highlight><highlight class="stringliteral">&quot;timestamp&quot;</highlight><highlight class="normal">]<sp/>=<sp/>std::to_string(now.unixtime());</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr<sp/>=<sp/>doc.createNestedArray(</highlight><highlight class="stringliteral">&quot;meta&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="da/de0/core_8cpp_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr.add(fileList[i].c_str());</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---<sp/>Wrapper<sp/>functions<sp/>(Arduino<sp/>only)<sp/>---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/storage_8h_1a03d6491b13757e01963c2ed90e52aa5f" kindref="member">saveDataToSD</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>celsius,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DateTime&amp;<sp/>now,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sequence);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/storage_8h_1a9b1aef5a070bc35c2abe6ef4721e421b" kindref="member">saveRecoveredJsonDataToSd</ref>(String*<sp/>fileList,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/de0/core_8cpp_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DateTime&amp;<sp/>now);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/storage_8h_1a4ebfbb31311cdc384f46f28627733869" kindref="member">listSavedFilesData</ref>(String*<sp/>fileList,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxFiles,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DateTime&amp;<sp/>now);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/storage_8h_1a655fe9b7f9b52e408b888ce3aadd62a2" kindref="member">deleteRecoveredAndPendingSourceFilesData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String*<sp/>fileList,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/de0/core_8cpp_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DateTime&amp;<sp/>now,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String&amp;<sp/>recoveredFilename);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---<sp/>Inline<sp/>helper<sp/>functions<sp/>(shared)<sp/>---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="d8/d6b/storage_8h_1a5abff0f0bde3f6a3197f25893c1e0b8e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="d8/d6b/storage_8h_1a5abff0f0bde3f6a3197f25893c1e0b8e" kindref="member">createFolderName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DateTime&amp;<sp/>now)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>folderName[8];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>std::snprintf(folderName,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(folderName),<sp/></highlight><highlight class="stringliteral">&quot;%04d&quot;</highlight><highlight class="normal">,<sp/>now.year());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>folderName;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="d8/d6b/storage_8h_1a99398dc180671d28434aa4982bfd36ca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/storage_8h_1a99398dc180671d28434aa4982bfd36ca" kindref="member">createFilename</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DateTime&amp;<sp/>now)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>std::snprintf(buffer,<sp/>bufferSize,<sp/></highlight><highlight class="stringliteral">&quot;%s/%02d%02d%02d%02d.json&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d6b/storage_8h_1a5abff0f0bde3f6a3197f25893c1e0b8e" kindref="member">createFolderName</ref>(now),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now.month(),<sp/>now.day(),<sp/>now.hour(),<sp/>now.minute());</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="include/storage.h"/>
  </compounddef>
</doxygen>
