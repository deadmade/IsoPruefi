<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="da/de0/core_8cpp" kind="file" language="C++">
    <compoundname>core.cpp</compoundname>
    <includes refid="de/d03/platform_8h" local="yes">platform.h</includes>
    <includes refid="d5/dc4/core_8h" local="yes">core.h</includes>
    <includes refid="d9/d94/network_8h" local="yes">network.h</includes>
    <includes refid="d7/d75/mqtt_8h" local="yes">mqtt.h</includes>
    <includes refid="d5/d2e/sensor_8h" local="yes">sensor.h</includes>
    <includes refid="d8/d6b/storage_8h" local="yes">storage.h</includes>
    <includes local="yes">secrets.h</includes>
    <incdepgraph>
      <node id="10">
        <label>core.h</label>
        <link refid="d5/dc4/core_8h"/>
      </node>
      <node id="12">
        <label>mqtt.h</label>
        <link refid="d7/d75/mqtt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>network.h</label>
        <link refid="d9/d94/network_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>platform.h</label>
        <link refid="de/d03/platform_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>sensor.h</label>
        <link refid="d5/d2e/sensor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>storage.h</label>
        <link refid="d8/d6b/storage_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/core.cpp</label>
        <link refid="da/de0/core_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Adafruit_ADT7410.h</label>
      </node>
      <node id="3">
        <label>Arduino.h</label>
      </node>
      <node id="8">
        <label>ArduinoJson.h</label>
      </node>
      <node id="9">
        <label>ArduinoMqttClient.h</label>
      </node>
      <node id="6">
        <label>RTClib.h</label>
      </node>
      <node id="5">
        <label>SdFat.h</label>
      </node>
      <node id="4">
        <label>Wire.h</label>
      </node>
      <node id="15">
        <label>cstdio</label>
      </node>
      <node id="16">
        <label>secrets.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="da/de0/core_8cpp_1afa042f998806fcdedab1794cebbeaad3" prot="public" static="no" mutable="no">
        <type>RTC_DS3231</type>
        <definition>RTC_DS3231 rtc</definition>
        <argsstring></argsstring>
        <name>rtc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core.cpp" line="9" column="12" bodyfile="src/core.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/de0/core_8cpp_1af19292dee25d42580f9588b754ddbedc" prot="public" static="no" mutable="no">
        <type>Adafruit_ADT7410</type>
        <definition>Adafruit_ADT7410 tempsensor</definition>
        <argsstring></argsstring>
        <name>tempsensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core.cpp" line="10" column="18" bodyfile="src/core.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/de0/core_8cpp_1a15e6b7e1f0fb2d1e0fe1654721bb5302" prot="public" static="no" mutable="no">
        <type>SdFat</type>
        <definition>SdFat sd</definition>
        <argsstring></argsstring>
        <name>sd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core.cpp" line="11" column="7" bodyfile="src/core.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/de0/core_8cpp_1a64f7c60366b0a82c42d7a1dbf4e9505a" prot="public" static="yes" mutable="no">
        <type>WiFiClient</type>
        <definition>WiFiClient wifiClient</definition>
        <argsstring></argsstring>
        <name>wifiClient</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core.cpp" line="13" column="19" bodyfile="src/core.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/de0/core_8cpp_1a68cab60b6c724cde0fc0009e126a80d5" prot="public" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t chipSelect</definition>
        <argsstring></argsstring>
        <name>chipSelect</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core.cpp" line="16" column="22" bodyfile="src/core.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/de0/core_8cpp_1ad4bd75fd80e14bbf47bb21fa3524f6c8" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* sensorIdOne</definition>
        <argsstring></argsstring>
        <name>sensorIdOne</name>
        <initializer>= &quot;Sensor_One&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core.cpp" line="17" column="19" bodyfile="src/core.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/de0/core_8cpp_1a6d11f0d69393ced0e86a5ec6ff1d520e" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* sensorIdInUse</definition>
        <argsstring></argsstring>
        <name>sensorIdInUse</name>
        <initializer>= <ref refid="da/de0/core_8cpp_1ad4bd75fd80e14bbf47bb21fa3524f6c8" kindref="member">sensorIdOne</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core.cpp" line="19" column="19" bodyfile="src/core.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/de0/core_8cpp_1abf39fa4821630d1a42cee86df5b43f39" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* sensorType</definition>
        <argsstring></argsstring>
        <name>sensorType</name>
        <initializer>= &quot;temp&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core.cpp" line="21" column="19" bodyfile="src/core.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/de0/core_8cpp_1a4ed7b4c951621dbec76099594f64d249" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* topic</definition>
        <argsstring></argsstring>
        <name>topic</name>
        <initializer>= &quot;dhbw/ai/si2023/2/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core.cpp" line="22" column="19" bodyfile="src/core.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/de0/core_8cpp_1abb6f4167f4e2989c5f0af6f10b56d33e" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int lastLoggedMinute</definition>
        <argsstring></argsstring>
        <name>lastLoggedMinute</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core.cpp" line="23" column="12" bodyfile="src/core.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/de0/core_8cpp_1ad43c3812e6d13e0518d9f8b8f463ffcf" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int count</definition>
        <argsstring></argsstring>
        <name>count</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core.cpp" line="24" column="12" bodyfile="src/core.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/de0/core_8cpp_1af80c34747656b263fece5b92e5786fab" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool wifiOk</definition>
        <argsstring></argsstring>
        <name>wifiOk</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core.cpp" line="25" column="13" bodyfile="src/core.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/de0/core_8cpp_1a9e1fbed2e9bf75293274a8fde0a5085d" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool recoveredSent</definition>
        <argsstring></argsstring>
        <name>recoveredSent</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core.cpp" line="26" column="13" bodyfile="src/core.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="da/de0/core_8cpp_1aa36be85ab02519b9969bf118f8647728" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MqttClient</type>
        <definition>static MqttClient mqttClient</definition>
        <argsstring>(wifiClient)</argsstring>
        <name>mqttClient</name>
        <param>
          <type><ref refid="da/de0/core_8cpp_1a64f7c60366b0a82c42d7a1dbf4e9505a" kindref="member">wifiClient</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core.cpp" line="14" column="19" declfile="src/core.cpp" declline="14" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="da/de0/core_8cpp_1a84b7ee25d4d43e3b6dd6b3193a2547f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dateTime</definition>
        <argsstring>(uint16_t *date, uint16_t *time)</argsstring>
        <name>dateTime</name>
        <param>
          <type>uint16_t *</type>
          <declname>date</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core.cpp" line="30" column="6" bodyfile="src/core.cpp" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="da/de0/core_8cpp_1a9fb1675443ce002d3928dd3edf3b2a72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void coreSetup</definition>
        <argsstring>()</argsstring>
        <name>coreSetup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core.cpp" line="36" column="6" bodyfile="src/core.cpp" bodystart="36" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="da/de0/core_8cpp_1aa5603fdb8113111f87914938533d1ece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void coreLoop</definition>
        <argsstring>()</argsstring>
        <name>coreLoop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core.cpp" line="72" column="6" bodyfile="src/core.cpp" bodystart="72" bodyend="136"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="de/d03/platform_8h" kindref="compound">platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d5/dc4/core_8h" kindref="compound">core.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/d94/network_8h" kindref="compound">network.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/d75/mqtt_8h" kindref="compound">mqtt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d5/d2e/sensor_8h" kindref="compound">sensor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/d6b/storage_8h" kindref="compound">storage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;secrets.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">RTC_DS3231<sp/><ref refid="de/d03/platform_8h_1afa042f998806fcdedab1794cebbeaad3" kindref="member">rtc</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal">Adafruit_ADT7410<sp/><ref refid="de/d03/platform_8h_1af19292dee25d42580f9588b754ddbedc" kindref="member">tempsensor</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal">SdFat<sp/><ref refid="de/d03/platform_8h_1a15e6b7e1f0fb2d1e0fe1654721bb5302" kindref="member">sd</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>WiFiClient<sp/><ref refid="da/de0/core_8cpp_1a64f7c60366b0a82c42d7a1dbf4e9505a" kindref="member">wifiClient</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MqttClient<sp/><ref refid="da/de0/core_8cpp_1aa36be85ab02519b9969bf118f8647728" kindref="member">mqttClient</ref>(<ref refid="da/de0/core_8cpp_1a64f7c60366b0a82c42d7a1dbf4e9505a" kindref="member">wifiClient</ref>);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="da/de0/core_8cpp_1a68cab60b6c724cde0fc0009e126a80d5" kindref="member">chipSelect</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="da/de0/core_8cpp_1ad4bd75fd80e14bbf47bb21fa3524f6c8" kindref="member">sensorIdOne</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Sensor_One&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static<sp/>const<sp/>char*<sp/>sensorIdTwo<sp/>=<sp/>&quot;Sensor_Two&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="da/de0/core_8cpp_1a6d11f0d69393ced0e86a5ec6ff1d520e" kindref="member">sensorIdInUse</ref><sp/>=<sp/><ref refid="da/de0/core_8cpp_1ad4bd75fd80e14bbf47bb21fa3524f6c8" kindref="member">sensorIdOne</ref>;<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//const<sp/>char*<sp/>sensorIdInUse<sp/>=<sp/>sensorIdTwo;<sp/>//<sp/>Uncomment<sp/>to<sp/>use<sp/>the<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="da/de0/core_8cpp_1abf39fa4821630d1a42cee86df5b43f39" kindref="member">sensorType</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;temp&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="da/de0/core_8cpp_1a4ed7b4c951621dbec76099594f64d249" kindref="member">topic</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;dhbw/ai/si2023/2/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/de0/core_8cpp_1abb6f4167f4e2989c5f0af6f10b56d33e" kindref="member">lastLoggedMinute</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/de0/core_8cpp_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/de0/core_8cpp_1af80c34747656b263fece5b92e5786fab" kindref="member">wifiOk</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/de0/core_8cpp_1a9e1fbed2e9bf75293274a8fde0a5085d" kindref="member">recoveredSent</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>timestamp<sp/>for<sp/>SD<sp/>card</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/de0/core_8cpp_1a84b7ee25d4d43e3b6dd6b3193a2547f0" kindref="member">dateTime</ref>(uint16_t*<sp/>date,<sp/>uint16_t*<sp/>time)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>DateTime<sp/>now<sp/>=<sp/><ref refid="de/d03/platform_8h_1afa042f998806fcdedab1794cebbeaad3" kindref="member">rtc</ref>.now();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>*date<sp/>=<sp/>FAT_DATE(now.year(),<sp/>now.month(),<sp/>now.day());</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>*time<sp/>=<sp/>FAT_TIME(now.hour(),<sp/>now.minute(),<sp/>now.second());</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/de0/core_8cpp_1a9fb1675443ce002d3928dd3edf3b2a72" kindref="member">coreSetup</ref>()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="da/de0/core_8cpp_1af80c34747656b263fece5b92e5786fab" kindref="member">wifiOk</ref><sp/>=<sp/><ref refid="d9/d94/network_8h_1a0757debfda15f5757976bc2c53c955c7" kindref="member">connectWiFi</ref>(15000);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>clientId[64];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>snprintf(clientId,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(clientId),<sp/></highlight><highlight class="stringliteral">&quot;IsoPruefi_%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="da/de0/core_8cpp_1a6d11f0d69393ced0e86a5ec6ff1d520e" kindref="member">sensorIdInUse</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="da/de0/core_8cpp_1aa36be85ab02519b9969bf118f8647728" kindref="member">mqttClient</ref>.setId(clientId);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="da/de0/core_8cpp_1af80c34747656b263fece5b92e5786fab" kindref="member">wifiOk</ref>)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d94/network_8h_1acc5736b55a4581c4020d736180e28306" kindref="member">connectMQTT</ref>(<ref refid="da/de0/core_8cpp_1aa36be85ab02519b9969bf118f8647728" kindref="member">mqttClient</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="de/d03/platform_8h_1afa042f998806fcdedab1794cebbeaad3" kindref="member">rtc</ref>.begin())<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;RTC<sp/>not<sp/>found!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="de/d03/platform_8h_1afa042f998806fcdedab1794cebbeaad3" kindref="member">rtc</ref>.lostPower())<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d03/platform_8h_1afa042f998806fcdedab1794cebbeaad3" kindref="member">rtc</ref>.adjust(DateTime(F(__DATE__),<sp/>F(__TIME__)));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>SdFile::dateTimeCallback(<ref refid="da/de0/core_8cpp_1a84b7ee25d4d43e3b6dd6b3193a2547f0" kindref="member">dateTime</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="de/d03/platform_8h_1a15e6b7e1f0fb2d1e0fe1654721bb5302" kindref="member">sd</ref>.begin(<ref refid="da/de0/core_8cpp_1a68cab60b6c724cde0fc0009e126a80d5" kindref="member">chipSelect</ref>,<sp/>SD_SCK_MHZ(25)))<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;SD<sp/>card<sp/>failed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d5/d2e/sensor_8h_1a07d1721651c2862c8c366b84a5424df3" kindref="member">initSensor</ref>(<ref refid="de/d03/platform_8h_1af19292dee25d42580f9588b754ddbedc" kindref="member">tempsensor</ref>))<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;ADT7410<sp/>init<sp/>failed!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DateTime<sp/>now<sp/>=<sp/>rtc.now();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sendPendingData(mqttClient,<sp/>topic,<sp/>sensorType,<sp/>sensorIdInUse,<sp/>now);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;Setup<sp/>complete.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/de0/core_8cpp_1aa5603fdb8113111f87914938533d1ece" kindref="member">coreLoop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>DateTime<sp/>now<sp/>=<sp/><ref refid="de/d03/platform_8h_1afa042f998806fcdedab1794cebbeaad3" kindref="member">rtc</ref>.now();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alreadyLoggedThisMinute<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(now.minute()<sp/>!=<sp/><ref refid="da/de0/core_8cpp_1abb6f4167f4e2989c5f0af6f10b56d33e" kindref="member">lastLoggedMinute</ref>)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/de0/core_8cpp_1abb6f4167f4e2989c5f0af6f10b56d33e" kindref="member">lastLoggedMinute</ref><sp/>=<sp/>now.minute();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>alreadyLoggedThisMinute<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reconnect<sp/>WiFi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="da/de0/core_8cpp_1af80c34747656b263fece5b92e5786fab" kindref="member">wifiOk</ref><sp/>||<sp/>WiFi.status()<sp/>!=<sp/>WL_CONNECTED)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;WiFi<sp/>not<sp/>connected.<sp/>Trying<sp/>to<sp/>reconnect...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/de0/core_8cpp_1af80c34747656b263fece5b92e5786fab" kindref="member">wifiOk</ref><sp/>=<sp/><ref refid="d9/d94/network_8h_1a0757debfda15f5757976bc2c53c955c7" kindref="member">connectWiFi</ref>(15000);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="da/de0/core_8cpp_1af80c34747656b263fece5b92e5786fab" kindref="member">wifiOk</ref><sp/>&amp;&amp;<sp/><ref refid="d9/d94/network_8h_1acc5736b55a4581c4020d736180e28306" kindref="member">connectMQTT</ref>(<ref refid="da/de0/core_8cpp_1aa36be85ab02519b9969bf118f8647728" kindref="member">mqttClient</ref>))<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;WiFi<sp/>ok:<sp/>Reconnected<sp/>to<sp/>MQTT.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/de0/core_8cpp_1a9e1fbed2e9bf75293274a8fde0a5085d" kindref="member">recoveredSent</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>to<sp/>allow<sp/>sending<sp/>recovered<sp/>data<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;Reconnect<sp/>failed.<sp/>Skipping<sp/>loop.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!alreadyLoggedThisMinute)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c<sp/>=<sp/><ref refid="d5/d2e/sensor_8h_1a417a800c5e7a16dba92107bea03bbb2f" kindref="member">readTemperatureCelsius</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d6b/storage_8h_1a09093bc97a03919f0854c4b6683837b7" kindref="member">saveToSD</ref>(<ref refid="de/d03/platform_8h_1a15e6b7e1f0fb2d1e0fe1654721bb5302" kindref="member">sd</ref>,<sp/>c,<sp/>now,<sp/><ref refid="da/de0/core_8cpp_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alreadyLoggedThisMinute<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/de0/core_8cpp_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>++;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delay(1000);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reconnect<sp/>MQTT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="da/de0/core_8cpp_1aa36be85ab02519b9969bf118f8647728" kindref="member">mqttClient</ref>.connected())<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;MQTT<sp/>not<sp/>connected.<sp/>Trying<sp/>to<sp/>reconnect...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d94/network_8h_1acc5736b55a4581c4020d736180e28306" kindref="member">connectMQTT</ref>(<ref refid="da/de0/core_8cpp_1aa36be85ab02519b9969bf118f8647728" kindref="member">mqttClient</ref>))<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;MQTT<sp/>still<sp/>not<sp/>connected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!alreadyLoggedThisMinute)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c<sp/>=<sp/><ref refid="d5/d2e/sensor_8h_1a417a800c5e7a16dba92107bea03bbb2f" kindref="member">readTemperatureCelsius</ref>();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d6b/storage_8h_1a09093bc97a03919f0854c4b6683837b7" kindref="member">saveToSD</ref>(<ref refid="de/d03/platform_8h_1a15e6b7e1f0fb2d1e0fe1654721bb5302" kindref="member">sd</ref>,<sp/>c,<sp/>now,<sp/><ref refid="da/de0/core_8cpp_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alreadyLoggedThisMinute<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/de0/core_8cpp_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>++;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delay(1000);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;MQTT<sp/>reconnected<sp/>successfully.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/de0/core_8cpp_1a9e1fbed2e9bf75293274a8fde0a5085d" kindref="member">recoveredSent</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>to<sp/>allow<sp/>sending<sp/>recovered<sp/>data<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>After<sp/>successful<sp/>MQTT<sp/>connection,<sp/>send<sp/>pending<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="da/de0/core_8cpp_1a9e1fbed2e9bf75293274a8fde0a5085d" kindref="member">recoveredSent</ref><sp/>&amp;&amp;<sp/><ref refid="da/de0/core_8cpp_1aa36be85ab02519b9969bf118f8647728" kindref="member">mqttClient</ref>.connected())<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d75/mqtt_8h_1ab2a92cb70a772c6c95d8b818c6b01f77" kindref="member">sendPendingData</ref>(<ref refid="da/de0/core_8cpp_1aa36be85ab02519b9969bf118f8647728" kindref="member">mqttClient</ref>,<sp/><ref refid="da/de0/core_8cpp_1a4ed7b4c951621dbec76099594f64d249" kindref="member">topic</ref>,<sp/><ref refid="da/de0/core_8cpp_1abf39fa4821630d1a42cee86df5b43f39" kindref="member">sensorType</ref>,<sp/><ref refid="da/de0/core_8cpp_1a6d11f0d69393ced0e86a5ec6ff1d520e" kindref="member">sensorIdInUse</ref>,<sp/>now);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/de0/core_8cpp_1a9e1fbed2e9bf75293274a8fde0a5085d" kindref="member">recoveredSent</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>normal<sp/>operation:<sp/>read<sp/>temperature<sp/>and<sp/>send<sp/>to<sp/>MQTT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!alreadyLoggedThisMinute)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c<sp/>=<sp/><ref refid="d5/d2e/sensor_8h_1a417a800c5e7a16dba92107bea03bbb2f" kindref="member">readTemperatureCelsius</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d75/mqtt_8h_1ab4dfd2aed88177be74263339392bdcc0" kindref="member">sendToMqtt</ref>(<ref refid="da/de0/core_8cpp_1aa36be85ab02519b9969bf118f8647728" kindref="member">mqttClient</ref>,<sp/><ref refid="da/de0/core_8cpp_1a4ed7b4c951621dbec76099594f64d249" kindref="member">topic</ref>,<sp/><ref refid="da/de0/core_8cpp_1abf39fa4821630d1a42cee86df5b43f39" kindref="member">sensorType</ref>,<sp/><ref refid="da/de0/core_8cpp_1a6d11f0d69393ced0e86a5ec6ff1d520e" kindref="member">sensorIdInUse</ref>,<sp/>c,<sp/>now,<sp/><ref refid="da/de0/core_8cpp_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>alreadyLoggedThisMinute<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/de0/core_8cpp_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>++;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="da/de0/core_8cpp_1aa36be85ab02519b9969bf118f8647728" kindref="member">mqttClient</ref>.poll();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>delay(1000);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/core.cpp"/>
  </compounddef>
</doxygen>
